{
	"extends": [
		"next/core-web-vitals",
		"prettier",
		"plugin:storybook/recommended",
		"plugin:@typescript-eslint/recommended"
	],
	"rules": {
		"comma-spacing": ["error", { "before": false, "after": true }],
		"react/no-unescaped-entities": 0,
		"react/prop-types": "off",
		// suppress errors for missing 'import React' in files
		"react/react-in-jsx-scope": "off",
		// allow jsx syntax in js files (for next.js project)
		"react/jsx-filename-extension": [
			1,
			{ "extensions": [".js", ".jsx", ".ts", ".tsx"] }
		] //should add ".ts" if typescript project
	},
	"overrides": [
		{
			"files": ["*.ts", "*.tsx"],
			"rules": {
				"react/prop-types": "off",
				"@typescript-eslint/naming-convention": [
					"warn",
					{
						"selector": "default",
						"format": ["camelCase"],
						"leadingUnderscore": "forbid",
						"trailingUnderscore": "forbid"
					},
					{
						"selector": "objectLiteralProperty",
						"modifiers": ["requiresQuotes"],
						"format": null
					},
					{
						"selector": "objectLiteralProperty",
						"format": ["strictCamelCase", "StrictPascalCase"]
					},
					{
						"selector": "typeLike",
						"format": ["StrictPascalCase"]
					},
					{
						"selector": "interface",
						"format": ["PascalCase"]
					},
					{
						"selector": "function",
						// Exception for FunctionComponents
						"format": ["strictCamelCase", "StrictPascalCase"]
					},
					{
						"selector": "parameter",
						"format": ["strictCamelCase", "StrictPascalCase"]
					},
					{
						"selector": "variable",
						"format": ["camelCase", "UPPER_CASE"]
					},
					{
						"selector": "variable",
						"modifiers": ["exported"],
						// Exception for components wrapped in HOC's and for React's Context
						"format": ["strictCamelCase", "StrictPascalCase", "UPPER_CASE"]
					},
					{
						"selector": "enumMember",
						"format": ["StrictPascalCase"]
					}
				]
			}
		}
	]
}
